{"version":3,"sources":["guidance.js","pip-webui-guidance-html.js","guidance/guidance_dialog.js","intro_guidance/intro_guidance_dialog.js","intro_guidance/intro_guidance_service.js","tips/tips_service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjrlfile":"pip-webui-guidance.js","sourcesContent":["/**\r\n * @file Registration of all guidance components\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipGuidance', [\r\n        'pipTips.Service',\r\n        'pipIntroGuidance.Service',\r\n        'pipGuidance.Dialog',\r\n        'pipReleaseIntroDialog'\r\n    ]);\r\n\r\n})(window.angular);\r\n","(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('guidance/guidance_dialog.html',\n    '<!--\\n' +\n    '@file Guidance dialog content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog layout-column\" width=\"768\" md-theme=\"{{theme}}\">\\n' +\n    '    <div class=\"pip-header layout-row\">\\n' +\n    '        <h3 class=\"rm16 flex\">{{title | translate}}</h3>\\n' +\n    '        <md-button class=\"pip-dialog-close\" ng-click=\"onCancel()\" \\n' +\n    '            aria-label=\"{{::\\'CLOSE\\' | translate}}\">\\n' +\n    '            <span class=\"icon-cross\"></span>\\n' +\n    '        </md-button>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            <pip-picture pip-src=\"imageUrl\" ng-hide=\"!imageUrl || imageUrl == \\'\\'\" class=\"bm16 center-block\"\\n' +\n    '                ng-style=\"{ width: imageWidth, height: imageHeight, display: \\'block\\' }\">\\n' +\n    '            </pip-picture>\\n' +\n    '\\n' +\n    '            <div class=\"bm16\" pip-translate-html=\"{{::content}}\"></div>\\n' +\n    '\\n' +\n    '            <md-button class=\"md-raised md-accent w-stretch\" ng-click=\"onAction()\"\\n' +\n    '                       ng-hide=\"!action || action==\\'\\'\"\\n' +\n    '                       arial-label=\"{{::action | translate}}\">\\n' +\n    '                {{::action | translate}}\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '            <md-checkbox aria-label=\"{{\\'DO_NOT_SHOW\\' | translate}}\" class=\"w-stretch m0 tm16 regular_14\"\\n' +\n    '                         ng-model=\"hideToggle\" ng-change=\"onHideToggle()\" ng-show=\"showHideToggle\"\\n' +\n    '                         aria-label=\"{{::\\'GUIDANCE_DO_NOT_SHOW\\' | translate}}\">\\n' +\n    '                {{::\\'GUIDANCE_DO_NOT_SHOW\\' | translate}}\\n' +\n    '            </md-checkbox>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('intro_guidance/intro_guidance_dialog.html',\n    '<md-dialog class=\"pip-dialog pip-guidance-dialog pip-guide-preview layout-column\" md-theme=\"{{theme}}\">\\n' +\n    '    <div ng-if=\"!$routing\" ng-swipe-left=\"onNextPage()\" ng-swipe-right=\"onBackPage()\"\\n' +\n    '         class=\"h-stretch flex layout layout-column {{\\'bg-\\' + data.pages[number].color}} \">\\n' +\n    '        <div class=\"layout layout-row layout-align-space-between-center layout-align-xs-center-center w-stretch pip-guide-page\">\\n' +\n    '            <md-button ng-click=\"onBackPage()\" class=\" lm16 hide-xs\" aria-label=\"BACK\"\\n' +\n    '                       ng-disabled=\"transaction.busy() || number == 0\">\\n' +\n    '                <md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\"\\n' +\n    '                         ng-class=\"{\\'opacity-disabled\\' :number == 0}\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '            <div class=\"layout layout-column layout-align-center-center bm16\">\\n' +\n    '                <pip-collage class=\"flex-fixed\" ng-if=\"data.pages[number].pic_id && (!data.pictures || !data.pictures[number])\"\\n' +\n    '                             pip-picture-ids=\"data.pages[number].picId\" pip-unique-code=\"data.id\"\\n' +\n    '                             pip-multiple=\"false\" pip-open=\"false\" pip-rebind=\"true\">\\n' +\n    '                </pip-collage>\\n' +\n    '                <div class=\"pip-pic\" ng-if=\"!data.pages[number].pic_id || data.pictures[number]\"\\n' +\n    '                     style=\"background-image: url({{data.pictures[number]}})\"></div>\\n' +\n    '\\n' +\n    '                <div class=\"layout layout-column layout-align-center-center pip-text\">\\n' +\n    '                    <p class=\"pip-preview-title\" ng-if=\"data.pages[number].title[ln]\">\\n' +\n    '                        {{data.pages[number].title[ln]}}</p>\\n' +\n    '\\n' +\n    '                    <p class=\"pip-preview-content\" ng-if=\"data.pages[number].content[ln]\">\\n' +\n    '                        {{data.pages[number].content[ln]}}</p>\\n' +\n    '                </div>\\n' +\n    '            </div>\\n' +\n    '            <md-button ng-click=\"onNextPage()\" class=\"rm16 hide-xs\" aria-label=\"DOWN\"\\n' +\n    '                       ng-disabled=\"transaction.busy() || number == data.pages.length - 1\">\\n' +\n    '                <md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\"\\n' +\n    '                         ng-class=\"{\\'opacity-disabled\\' : number == data.pages.length - 1}\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '        <div class=\" flex-fixed flex w-stretch pip-guide-page-footer\">\\n' +\n    '\\n' +\n    '\\n' +\n    '            <div  class=\"layout-row layout-align-center-center\" ng-if=\"data.pages.length > 1\">\\n' +\n    '                <md-icon ng-repeat=\"radio in data.pages\" ng-click=\"onChangePage($index)\" class=\"pip-radio-button \"\\n' +\n    '                         md-svg-icon=\"{{radio != data.pages[number] ? \\'icons:radio-off\\' : \\'icons:circle\\'}}\">\\n' +\n    '                </md-icon>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <div class=\"h64 layout-row layout-align-xs-space-between-center layout-align-center-center\">\\n' +\n    '\\n' +\n    '                <md-button ng-click=\"onBackPage()\" class=\"lm16\" ng-if=\"$mdMedia(\\'xs\\')\" aria-label=\"BACK\"\\n' +\n    '                           ng-disabled=\"transaction.busy() || number == 0\">\\n' +\n    '                    <md-icon md-svg-icon=\"icons:arrow-left\" class=\"pip-arrow-button\"\\n' +\n    '                             ng-class=\"{\\'opacity-disabled\\' :number == 0}\"></md-icon>\\n' +\n    '                </md-button>\\n' +\n    '\\n' +\n    '                <md-button ng-click=\"onClose()\"\\n' +\n    '                           class=\"pip-button-got rm8 lm8\\n' +\n    '                                       {{number == data.pages.length - 1  ? \\'fg-\\' + data.pages[number].color : \\'bg-\\' + data.pages[number].color}}\"\\n' +\n    '                           ng-class=\"{\\'md-raised\\':  number == data.pages.length - 1}\"\\n' +\n    '                           aria-label=\"NEXT\"\\n' +\n    '                           ng-disabled=\"transaction.busy()\">\\n' +\n    '                    GOT IT !\\n' +\n    '                </md-button>\\n' +\n    '\\n' +\n    '                <md-button ng-click=\"onNextPage()\" class=\"rm16 \"  ng-if=\"$mdMedia(\\'xs\\')\"  aria-label=\"DOWN\"\\n' +\n    '                           ng-disabled=\"transaction.busy() || number == data.pages.length - 1\">\\n' +\n    '                    <md-icon md-svg-icon=\"icons:arrow-right\" class=\"pip-arrow-button\"\\n' +\n    '                             ng-class=\"{\\'opacity-disabled\\' : number == data.pages.length - 1}\"></md-icon>\\n' +\n    '                </md-button>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipGuidance.Templates');\n} catch (e) {\n  module = angular.module('pipGuidance.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tips/tip.template.html',\n    '<div ng-if=\"title\" class=\\'pip-title p24-flex flex-fixed bp16\\'>\\n' +\n    '    {{ title | translate }}\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\\'pip-content pip-popover-content lp24-flex rp24-flex text-body1 bm64 pip-scroll\\'\\n' +\n    '     ng-class=\"{\\'tm24\\' : !title }\">\\n' +\n    '    <div ng-if=\"image && $mdMedia(\\'gt-xs\\')\" class=\"pip-pic\"></div>\\n' +\n    '    <pip-markdown pip-text=\"content\" pip-rebind=\"true\"></pip-markdown>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"pip-footer lm24-flex rm24-flex position-bottom layout-row layout-align-start-center\">\\n' +\n    '    <a ng-if=\"link\" target=\"_blank\" href=\"{{ link }}\" class=\"text-body2 flex\">\\n' +\n    '        {{:: \\'MORE_URL\\' | translate }}\\n' +\n    '    </a>\\n' +\n    '    <div  ng-if=\"!link\" class=\"flex\"></div>\\n' +\n    '\\n' +\n    '    <md-button ng-click=\\'onNextClick()\\' class=\"rm0\">\\n' +\n    '        {{:: \\'NEXT\\' | translate }}\\n' +\n    '    </md-button>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n})();\n","/**\r\n * @file Guidance dialog\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (angular) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipGuidance.Dialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates']);\r\n\r\n    thisModule.config(['pipTranslateProvider', function (pipTranslateProvider) {\r\n        pipTranslateProvider.translations('en', {\r\n            GUIDANCE_TITLE: 'What should you do here?',\r\n            GUIDANCE_ACTION: 'Do it now!',\r\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\"\r\n        });\r\n        pipTranslateProvider.translations('ru', {\r\n            GUIDANCE_TITLE: 'Что здесь делать?',\r\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\r\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова'\r\n        });\r\n    }]);\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name pipGuidance.Dialog:pipGuidanceDialog\r\n     *\r\n     * @description\r\n     * Reproduced API to show guidance dialog stretched out on a whole screen.\r\n     * It is included a navigation and allows users to go back through guide.\r\n     */\r\n    thisModule.factory('pipGuidanceDialog',\r\n        ['$mdDialog', function ($mdDialog) {\r\n            return {\r\n                /**\r\n                 * @ngdoc method\r\n                 * @methodOf pipGuidance.Dialog:pipGuidanceDialog\r\n                 * @name pipGuidance.Dialog.pipGuidanceDialog:show\r\n                 *\r\n                 * @description\r\n                 * Shows guidance panel. Shown guidance can be close by click on backdrop space. Into callback function is\r\n                 * passed nothing data.\r\n                 *\r\n                 * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/guidance/guidance_dialog.js#L50 View source}\r\n                 *\r\n                 * @param {Object} params   Options for dialog panel.\r\n                 * @param {Function=} successCallback   Callback function is invoked on success dialog close.\r\n                 * @param {Function=} cancelCallback    Callback function is invoked on error event.\r\n                 */\r\n                show: function (params, successCallback, cancelCallback) {\r\n                    $mdDialog.show({\r\n                        targetEvent: params.event,\r\n                        templateUrl: 'guidance/guidance_dialog.html',\r\n                        controller: 'pipGuidanceDialogController',\r\n                        locals: { params: params },\r\n                        clickOutsideToClose: true\r\n                    })\r\n                        .then(function () {\r\n                            if (successCallback) {\r\n                                successCallback();\r\n                            }\r\n                        }, function () {\r\n                            if (cancelCallback) {\r\n                                cancelCallback();\r\n                            }\r\n                        });\r\n                }\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.controller('pipGuidanceDialogController',\r\n        ['$scope', '$rootScope', '$mdDialog', 'params', function ($scope, $rootScope, $mdDialog, params) {\r\n            $scope.theme = $rootScope.$theme;\r\n            $scope.title = params.title || 'GUIDANCE_TITLE';\r\n\r\n            $scope.imageUrl = params.imageUrl || '';\r\n            $scope.imageWidth = params.imageWidth || '100%';\r\n            $scope.imageHeight = params.imageHeight || '150px';\r\n\r\n            $scope.content = params.content;\r\n            $scope.action = params.action || 'GUIDANCE_ACTION';\r\n            $scope.hideToggle = params.hideToggle;\r\n            $scope.showHideToggle = params.hideToggleCallback != null;\r\n\r\n            $scope.onCancel = function () {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.onAction = function () {\r\n                $mdDialog.hide();\r\n            };\r\n\r\n            $scope.onHideToggle = function () {\r\n                if (params.hideToggleCallback) {\r\n                    params.hideToggleCallback($scope.hideToggle);\r\n                }\r\n            };\r\n        }]);\r\n\r\n})(window.angular);\r\n","/**\r\n * @file Guidance dialog\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipReleaseIntroDialog', ['ngMaterial', 'pipTranslate', 'pipGuidance.Templates']);\r\n\r\n    thisModule.config(['pipTranslateProvider', function (pipTranslateProvider) {\r\n        pipTranslateProvider.translations('en', {\r\n            GUIDANCE_TITLE: 'What should you do here?',\r\n            GUIDANCE_ACTION: 'Do it now!',\r\n            GUIDANCE_DO_NOT_SHOW: \"Don't show it again\"\r\n        });\r\n        pipTranslateProvider.translations('ru', {\r\n            GUIDANCE_TITLE: 'Что здесь делать?',\r\n            GUIDANCE_ACTION: 'Сделать это сейчас!',\r\n            GUIDANCE_DO_NOT_SHOW: 'Не показывать это снова'\r\n        });\r\n    }]);\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name pipReleaseIntroDialog.pipReleaseIntroDialog\r\n     *\r\n     * @description\r\n     * Provides API to show intro dialog.\r\n     */\r\n    thisModule.factory('pipReleaseIntroDialog',\r\n        ['$mdDialog', function ($mdDialog) {\r\n            return {\r\n                /**\r\n                 * @ngdoc method\r\n                 * @methodOf pipReleaseIntroDialog.pipReleaseIntroDialog\r\n                 * @name pipReleaseIntroDialog.pipReleaseIntroDialog:show\r\n                 *\r\n                 * @description\r\n                 * Shows dialog panel. Shown dialog can be close by click on backdrop space. Into callback function is\r\n                 * passed nothing data.\r\n                 *\r\n                 * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_dialog.js#L50 View source}\r\n                 * \r\n                 * @param {Object} params   Options for dialog panel.\r\n                 * @param {Function=} successCallback   Callback function is invoked on success dialog close.\r\n                 * @param {Function=} cancelCallback    Callback function is invoked on error event.\r\n                 *\r\n                 */\r\n                show: function (params, successCallback, cancelCallback) {\r\n                    $mdDialog.show({\r\n                        targetEvent: params.event,\r\n                        templateUrl: 'intro_guidance/intro_guidance_dialog.html',\r\n                        controller: 'pipReleaseIntroDialogController',\r\n                        locals: { params: params },\r\n                        clickOutsideToClose: true\r\n                    })\r\n                        .then(function () {\r\n                            if (successCallback) {\r\n                                successCallback();\r\n                            }\r\n                        }, function () {\r\n                            if (cancelCallback) {\r\n                                cancelCallback();\r\n                            }\r\n                        });\r\n                }\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.controller('pipReleaseIntroDialogController',\r\n        ['$scope', '$rootScope', '$mdDialog', '$mdMedia', 'params', function ($scope, $rootScope, $mdDialog, $mdMedia, params) {\r\n            $scope.theme = $rootScope.$theme;\r\n            $scope.settings = params.settings;\r\n            $scope.admin = params.admin;\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            var guide = params.guide;\r\n\r\n            if (!$scope.admin && $scope.settings[params.settingsName] && $scope.settings[params.settingsName].lastId) {\r\n                params.settingsName = 'release';\r\n            }\r\n\r\n            $scope.number = 0;\r\n            $scope.ln = params.ln || $rootScope.$language || 'en';\r\n            $scope.data = guide;\r\n\r\n            _.each($scope.data.pages, function (page) {\r\n                if (page.pic_id) {\r\n                    var picId = page.pic_id;\r\n\r\n                    page.picId = [];\r\n                    page.picId.push(picId);\r\n                }\r\n            });\r\n\r\n            // Process user actions\r\n            // --------------------\r\n\r\n            $scope.onChangePage = function (newNumber) {\r\n                $scope.number = newNumber;\r\n            };\r\n\r\n            $scope.onBackPage = function () {\r\n                if ($scope.number !== 0) {\r\n                    $scope.number -= 1;\r\n                }\r\n            };\r\n\r\n            $scope.onNextPage = function () {\r\n                if ($scope.number !== $scope.data.pages.length - 1) {\r\n                    $scope.number += 1;\r\n                }\r\n            };\r\n\r\n            $scope.onClose = function () {\r\n                if (!$scope.admin) {\r\n                    $scope.settings[params.settingsName].lastId = $scope.data.id;\r\n                    $scope.settings[params.settingsName].date = new Date();\r\n\r\n                    params.pipDataSettings.saveSettings($scope.settings, params.settingsName);\r\n                }\r\n\r\n                $mdDialog.cancel();\r\n            };\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Guidance service\r\n * @copyright Digital Living Software Corp. 2014-2015\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipIntroGuidance.Service', ['pipReleaseIntroDialog']);\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name pipIntroGuidance.Service.pipGuidance\r\n     *\r\n     * @description\r\n     * Service provides an interface to show introduction guide.\r\n     *\r\n     * @requires pipReleaseIntroDialog\r\n     */\r\n    thisModule.factory('pipGuidance', ['pipReleaseIntroDialog', 'pipDataSettings', 'pipDataGuide', '$rootScope', function (pipReleaseIntroDialog, pipDataSettings, pipDataGuide, $rootScope) {\r\n\r\n        return {\r\n            /** @see showIntroReleaseGuide */\r\n            showIntroReleaseGuide: showIntroReleaseGuide,\r\n            /** @see findIntroReleaseGuide */\r\n            findIntroReleaseGuide: findIntroReleaseGuide,\r\n            /** @see showIntroGuidance */\r\n            showIntroGuidance: showIntroGuidance,\r\n            /** @see showReleaseGuidance*/\r\n            showReleaseGuidance: showReleaseGuidance\r\n        };\r\n\r\n        function showReleaseGuidance(filter) {\r\n            pipDataGuide.readGuides({filter: filter}, function (guides) {\r\n                guides = _.filter(guides, function (guide) {\r\n                    return guide.type = 'new release' && guide.status === 'completed';\r\n                });\r\n                if (guides.length > 0) {\r\n                    pipReleaseIntroDialog.show({\r\n                        guide: guides[0],\r\n                        settings: {},\r\n                        settingsName: 'new release',\r\n                        pipDataSettings: null,\r\n                        admin: true,\r\n                        ln: $rootScope.$language\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        function showIntroGuidance(filter) {\r\n            pipDataGuide.readIntroGuides({filter: filter}, function (guides) {\r\n                guides = _.filter(guides, function (guide) {\r\n                    return guide.type = 'intro' && guide.status === 'completed';\r\n                });\r\n                if (guides.length > 0) {\r\n                    pipReleaseIntroDialog.show({\r\n                        guide: guides[0],\r\n                        settings: {},\r\n                        settingsName: 'intro',\r\n                        pipDataSettings: null,\r\n                        admin: true,\r\n                        ln: $rootScope.$language\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipIntroGuidance.Service.pipGuidance\r\n         * @name pipIntroGuidance.Service.pipGuidance:showIntroReleaseGuide\r\n         *\r\n         * @description\r\n         * Shows introduction guide\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#L51 View source}\r\n         *\r\n         * @param {Object} guide    Collection with intro information\r\n         * @param {Object} settings Settings object\r\n         * @param {boolean} admin   It is true when user has admin role\r\n         * @param {string} ln       Tips content language\r\n         * @param {Object} party    User's party object\r\n         * @param {Object} user     User's profile\r\n         *\r\n         * @example\r\n         * <pre>\r\n         *     pipGuidance.showIntroReleaseGuide($scope.guide, $scope.settings, null, 'en', $rootScope.$party, $rootScope.$user);\r\n         * </pre>\r\n         */\r\n        function showIntroReleaseGuide(guide, settings, admin, ln, party, user) {\r\n            if (guide && party.id === user.id) {\r\n                pipReleaseIntroDialog.show({\r\n                    guide: guide,\r\n                    settings: settings,\r\n                    settingsName: guide.type === 'intro' ? 'intro' : 'release',\r\n                    pipDataSettings: pipDataSettings,\r\n                    admin: admin,\r\n                    ln: ln\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipIntroGuidance.Service.pipGuidance\r\n         * @name  pipIntroGuidance.Service.pipGuidance:findIntroReleaseGuide\r\n         *\r\n         * @description\r\n         * Finds guideline due to passed settings options.\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/intro_guidance/intro_guidance_service.js#80 View source}\r\n         *\r\n         * @param {Object} guides   Collection of guides\r\n         * @param {Object} settings Guide options.\r\n         *\r\n         * @return {Object} Sorted guideline. Result is dependece on 'settings.intro' field. If it is existed than it returns\r\n         * intro guide with 'completed' status.\r\n         */\r\n        function findIntroReleaseGuide(guides, settings, app) {\r\n            var guidesSort, app = app || 'pip-life';\r\n\r\n            if (!settings.intro || !settings.intro.lastId) {\r\n                // TODO [apidhirnyi] Make chaining for filter and sortBy\r\n                guidesSort = _.filter(guides, function (guide) {\r\n                    return guide.type === 'intro' && guide.status === 'completed' && guide.app === app;\r\n                });\r\n\r\n                guidesSort = _.sortBy(guidesSort, function (guide) {\r\n                    return -new Date(guide.created).getTime();\r\n                });\r\n\r\n                return guidesSort[0];\r\n            }\r\n\r\n            guidesSort = _.filter(guides, function (guide) {\r\n                return guide.type === 'new release' && guide.status === 'completed'  && guide.app === app;\r\n            });\r\n\r\n            guidesSort = _.sortBy(guidesSort, function (guide) {\r\n                return -new Date(guide.created).getTime();\r\n            });\r\n\r\n            if (!settings.intro.date || (guidesSort.length > 0 &&\r\n                new Date(settings.intro.date) < new Date(guidesSort[0].created) &&\r\n                guidesSort[0].id != settings.release.lastId)) {\r\n                return guidesSort[0];\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }]);\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Tips service\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global $ */\r\n\r\n(function (angular) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTips.Service', ['pipGuidance.Templates']);\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name pipTips.Service.pipTips\r\n     *\r\n     * @description\r\n     * Service provides an interface to manage tips state.\r\n     * The service is available only on run phase.\r\n     */\r\n    thisModule.factory('pipTips', ['$timeout', '$rootScope', '$pipPopover', 'pipDataTip', 'pipRest', 'pipDataSettings', function ($timeout, $rootScope, $pipPopover, pipDataTip, pipRest, pipDataSettings) {\r\n        var tips;\r\n\r\n        return {\r\n            /** @see getTips */\r\n            getTips: getTips,\r\n            /** @see filterTips */\r\n            filterTips: filterTips,\r\n            /** @see showTips */\r\n            showTips: showTips,\r\n            /** @see firstShowTips */\r\n            firstShowTips: firstShowTips\r\n        };\r\n\r\n        function checkStatus(item) {\r\n            return item.status === 'completed';\r\n        }\r\n\r\n        function compareRandom() {\r\n            return Math.random() - 0.5;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipTips.Service.pipTips\r\n         * @name pipTips.Service.pipTips:filterTips\r\n         *\r\n         * @description\r\n         * Filters passed tips by passed topic and sorts result collection.\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L63 View source}\r\n         *\r\n         * @param {Array} data  Source array of tips entities\r\n         * @param {string} topic    Name of topic to filter by it\r\n         *\r\n         * @returns {Array} Filtered and sorted collection.\r\n         *\r\n         * @example\r\n         * <pre>\r\n         *     pipTips.filterTips(tips, 'goals');\r\n         * </pre>\r\n         */\r\n        function filterTips(data, topic) {\r\n            tips = [];\r\n            var tipsCollection = _.filter(data, checkStatus),\r\n                index;\r\n\r\n            for (index = 0; index < tipsCollection.length; index++) {\r\n                var topic = _.find(tipsCollection[index].topics, function (t) { return t == topic; });\r\n\r\n                if (topic) {\r\n                    tips.push(tipsCollection[index]);\r\n                }\r\n            }\r\n\r\n            tips.sort(compareRandom);\r\n\r\n            return tips;\r\n        }\r\n\r\n        function tipController($scope, $timeout, $mdMedia) {\r\n\r\n            $scope.index = 0;\r\n\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.onNextClick = function () {\r\n                $scope.index++;\r\n\r\n                if ($scope.index === $scope.locals.tips.length) {\r\n                    $pipPopover.hide();\r\n                } else {\r\n                    init();\r\n                    $pipPopover.resize();\r\n                    // $rootScope.$broadcast('pipWindowResized');\r\n                }\r\n            };\r\n\r\n            $scope.$on('pipWindowResized', init);\r\n\r\n            function init() {\r\n\r\n                $scope.title = $scope.locals.tips[$scope.index].title[$scope.locals.ln];\r\n                $scope.content = $scope.locals.tips[$scope.index].content[$scope.locals.ln];\r\n                if ($scope.locals.tips[$scope.index].pic_id) {\r\n                    $scope.image = pipRest.serverUrl() + '/api/parties/' + $scope.locals.tips[$scope.index].creator_id\r\n                        + '/files/' + $scope.locals.tips[$scope.index].pic_id + '/content';\r\n                }\r\n\r\n                $scope.link = $scope.locals.tips[$scope.index].more_url;\r\n\r\n                if ($scope.image) {\r\n                    $timeout(function () {\r\n                        var backdropElement = $('.pip-popover-backdrop'),\r\n                            popover = backdropElement.find('.pip-popover');\r\n\r\n                        popover.find('.pip-pic').css('background-image', 'url(' + $scope.image + ')');\r\n                    }, 100);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipTips.Service.pipTips\r\n         * @name pipTips.Service.pipTips:showTips\r\n         *\r\n         * @description\r\n         * Shows tip to user.\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L144 View source}\r\n         *\r\n         * @param {Array} tips  Array of tips\r\n         * @param {string} ln   Chosen language\r\n         * @param {Object=} [$event=null]    Event object\r\n         *\r\n         * @example\r\n         * <pre>\r\n         *      pipTips.showTips(tips, 'en');\r\n         * </pre>\r\n         */\r\n        function showTips(tips, ln, $event) {\r\n\r\n            if (tips && tips.length > 0) {\r\n                $pipPopover.hide();\r\n                $pipPopover.show({\r\n                    element: $event ? $event.currentTarget : null,\r\n                    class: 'pip-tip',\r\n                    cancelCallback: function () {\r\n                        return false;\r\n                    },\r\n                    locals: {\r\n                        tips: tips,\r\n                        ln: ln || 'en'\r\n                    },\r\n                    controller: ['$scope', '$timeout', '$mdMedia', tipController],\r\n                    templateUrl: 'tips/tip.template.html'\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipTips.Service.pipTips\r\n         * @name pipTips.Service.pipTips:firstShowTips\r\n         *\r\n         * @description\r\n         * Shows a tip\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L181 View source}\r\n         *\r\n         * @param {Array} tips  Collection of tips\r\n         * @param {string} [ln='en']   Language for tip content\r\n         * @param {string} topic    Name of needed topic\r\n         * @param {Object} settings Settings object\r\n         * @param {Object} [kolDay=2]   Days amount throughout tips should be shown\r\n         */\r\n        function firstShowTips(tips, ln, topic, settings, kolDay) {\r\n            var ln = ln || 'en',\r\n                kolDay = kolDay || 2,\r\n                now = new Date(),\r\n                show;\r\n\r\n            if (settings && settings[topic].tips) {\r\n                show = (now.getTime() - new Date(settings[topic].tips).getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n                // TODO [apidhirnyi] Extract the same code part into the function\r\n                if (show > kolDay) {\r\n                    $pipPopover.hide();\r\n                    showTips(tips, ln);\r\n                    settings[topic].tips = new Date();\r\n                    pipDataSettings.saveSettings(settings, topic);\r\n                }\r\n            } else if (settings[topic]) {\r\n                $pipPopover.hide();\r\n                showTips(tips, ln);\r\n                settings[topic].tips = new Date();\r\n                pipDataSettings.saveSettings(settings, topic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @ngdoc method\r\n         * @methodOf pipTips.Service.pipTips\r\n         * @name pipTips.Service.pipTips:getTips\r\n         *\r\n         * @description\r\n         * Returns tips collection according to topic.\r\n         *\r\n         * {@link https://github.com/pip-webui/pip-webui-guidance/blob/master/src/tips/tips_service.js#L220 View source}\r\n         *\r\n         * @param {Object} party    User's party object\r\n         * @param {string} ln       Language for tip content\r\n         * @param {string} topic    Name of needed topic\r\n         * @param {Function} callback   Callback function. It gets tips collection as argument.\r\n         */\r\n        function getTips(party, ln, topic, callback) {\r\n\r\n            pipDataTip.readTips(\r\n                {item: {}},\r\n                null,\r\n                function (result) {\r\n                    filterTips(result.data, topic);\r\n\r\n                    if (callback) { callback(tips); }\r\n\r\n                    return tips;\r\n                },\r\n                function () {\r\n                    return null;\r\n                }\r\n            );\r\n        }\r\n\r\n    }]);\r\n\r\n})(window.angular);\r\n"],"sourceRoot":"/source/"}